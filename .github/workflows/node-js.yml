# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: init
        shell: bash
        run: |
          echo "::set-output name=yarn_cache::$(yarn cache dir)"
          #
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@v2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.init.outputs.yarn_cache }}
          key: ${{ runner.os }}-yarn_cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn_cache-
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - name: Installing
        run: yarn --frozen-lockfile --link-duplicates

      - name: Lint
        run: yarn lint

      - name: Unit tests
        run: yarn test --coverage
        env:
          CI: true
      - name: Send test coverage to codecov
        continue-on-error: true
        uses: codecov/codecov-action@v1

      - name: Build
        run: yarn build

      - name: End to end test
        run: yarn e2e
